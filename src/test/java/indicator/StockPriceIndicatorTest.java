package indicator;
// Generated by CodiumAI

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.trading.tradingsignal.stock.DatePrice;
import org.trading.tradingsignal.stock.StockData;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.List;


public class StockPriceIndicatorTest {


    // Calculate method returns correct prices based on stockPriceType
    @Test
    public void test_calculate_returns_correct_prices_based_on_stock_price_type() {
        StockData stockData = new StockData();
        List<DatePrice> datePrices = new ArrayList<>();

        DatePrice datePrice1 = new DatePrice();
        datePrice1.setTimestamp(1622505600);
        datePrice1.setOpen(100.0);
        datePrice1.setHigh(110.0);
        datePrice1.setLow(90.0);
        datePrice1.setClose(105.0);
        datePrices.add(datePrice1);

        DatePrice datePrice2 = new DatePrice();
        datePrice2.setTimestamp(1622592000);
        datePrice2.setOpen(105.0);
        datePrice2.setHigh(115.0);
        datePrice2.setLow(95.0);
        datePrice2.setClose(110.0);
        datePrices.add(datePrice2);

        stockData.setDatePrices(datePrices);

        StockPriceIndicator indicator = new StockPriceIndicator(StockPriceIndicator.StockPriceType.CLOSE);
        List<AbstractMap.SimpleEntry<Long, Double>> result = indicator.calculate(stockData);

        assertEquals(2, result.size());
        assertEquals(105.0, result.get(0).getValue());
        assertEquals(110.0, result.get(1).getValue());
    }

    // Calculate method handles empty datePrices list gracefully
    @Test
    public void test_calculate_handles_empty_date_prices_list_gracefully() {
        StockData stockData = new StockData();
        stockData.setDatePrices(new ArrayList<>());

        StockPriceIndicator indicator = new StockPriceIndicator(StockPriceIndicator.StockPriceType.OPEN);
        List<AbstractMap.SimpleEntry<Long, Double>> result = indicator.calculate(stockData);

        assertTrue(result.isEmpty());
    }
}
